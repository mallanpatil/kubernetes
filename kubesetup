Docker on centos
https://github.com/docker/for-linux/issues/299
sudo yum install -y yum-utils
yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

sudo yum makecache fast
To avoid error “Requires: container-selinux >= 2.9” Run following command
sudo yum install -y http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.42-1.gitad8f0f7.el7.noarch.rpm

To avoid error “libtool-ltdl-2.4.2-22.el7_3.x8 FAILED” Run following command
yum install http://mirror.centos.org/centos/7/os/x86_64/Packages/libtool-ltdl-2.4.2-22.el7_3.x86_64.rpm

To avoid Error: Package: docker-ce-18.03.1.ce-1.el7.centos.x86_64 (docker-ce-stable) Requires: pigz
Run:
yum install http://mirror.centos.org/centos/7/extras/x86_64/Packages/pigz-2.3.3-1.el7.centos.x86_64.rpm
sudo yum -y install docker-ce


Install kubeadm

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

setenforce 0

yum install -y kubelet kubeadm kubectl

systemctl enable kubelet && systemctl start kubelet

cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system 


Make sure that the cgroup driver used by kubelet is the same as the one used by Docker. Verify that your Docker cgroup driver matches the kubelet config:


cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

If the Docker cgroup driver and the kubelet config don’t match, change the kubelet config to match the Docker cgroup driver. The flag you need to change is --cgroup-driver. If it’s already set, you can update like so:
Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml" --cgroup-driver=cgroupfs

systemctl daemon-reload
systemctl restart kubelet

Create cluster
https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#pod-network

systemctl stop firewalld
systemctl disable firewalld

swapoff -a

kubeadm init --kubernetes-version=1.11.0 

 mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubeadm join 10.131.236.232:6443 --token eefe5g.zjd6c8n1qt6dm8s5 --discovery-token-ca-cert-hash sha256:e2044bcfe5533065b011f41a964deae19da23ad0c73bd221730535c17ef5e397

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')" 



groupadd hadoop -g 1010 
useradd hadoop -u 1010 -g 1010

mkdir -p /mnt/disk1/data/name
mkdir -p /mnt/disk1/data/conf
mkdir -p /mnt/disk1/data/logs
 chown -R hadoop:hadoop /mnt/data/

Node labelling
 
Need to disable swap every time machine reboots
keep it in start script.
swapoff -a

